#!/usr/bin/env python
########################################################################################################
# Name:  PSA_Physicians.py
#
# Desc: Primary Service Area (PSA) Data for SSP ACOs (Physicians)
#
# Created: Paul Baranoski 12/07/2023
# Modified:
#
# Paul Baranoski 2023-12-08 Created python code.
# 
########################################################################################################
import os
import sys
import datetime
from datetime import datetime
import sendEmail

currentDirectory = os.path.dirname(os.path.realpath(__file__))
rootDirectory = os.path.abspath(os.path.join(currentDirectory, ".."))
utilDirectory = os.getenv('CMN_UTIL')

sys.path.append(rootDirectory)
sys.path.append(utilDirectory)
script_name = os.path.basename(__file__)

import snowconvert_helpers
from snowconvert_helpers import Export

########################################################################################################
# VARIABLE ASSIGNMENT
########################################################################################################
con = None 
now = datetime.now()
date_time = now.strftime("%m/%d/%Y, %H:%M:%S")

# Use Timestamp generated by shell script so logs and output files will have timestamp
TMSTMP=os.getenv('TMSTMP')
ENVNAME=os.getenv('ENVNAME')
YYYY=os.getenv('YYYY')
PIV_COL_DESC_LIST=os.getenv('PIV_COL_DESC_LIST')
PIV_COL_NAME_LIST=os.getenv('PIV_COL_NAME_LIST')


# boolean - Python Exception status
bPythonExceptionOccurred=False

########################################################################################################
# RUN
########################################################################################################
print('')
print("Run date and time: " + date_time  )
print('')

########################################################################################################
# Method to execute the extract SQL using Timestamp 
########################################################################################################
try:
   snowconvert_helpers.configure_log()
   con = snowconvert_helpers.log_on()   
   snowconvert_helpers.execute_sql_statement(f"alter session set query_tag='{script_name}'",con,exit_on_error = True)
   snowconvert_helpers.execute_sql_statement("""USE WAREHOUSE ${sf_xtr_warehouse}""", con,exit_on_error = True)
   
   #**************************************
   #   Extract NYSPAP Bene Contract data  
   #**************************************   
   snowconvert_helpers.execute_sql_statement(f"""COPY INTO @BIA_{ENVNAME}.CMS_STAGE_XTR_{ENVNAME}.BIA_{ENVNAME}_XTR_PSA_STG/PSA_PHYSICIANS_{YYYY}_{TMSTMP}.csv.gz
                                                FROM (

                    SELECT *
                      FROM (
                      
                            SELECT BZ5.GEO_ZIP5_CD        AS Bene_ZIP_CD
                            --     ,SPC.PRVDR_SPCLTY_CD   AS PRVDR_SPCLTY_CD
                                   ,SPC.PRVDR_SPCLTY_DESC AS PRVDR_SPCLTY_DESC
                                   ,SUM(CL.CLM_LINE_ALOWD_CHRG_AMT) AS CHRG_AMT
                            
                            FROM IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM C
                            
                            INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE CL
                            ON  CL.GEO_BENE_SK     = C.GEO_BENE_SK
                            AND CL.CLM_DT_SGNTR_SK = C.CLM_DT_SGNTR_SK
                            AND CL.CLM_TYPE_CD     = C.CLM_TYPE_CD
                            AND CL.CLM_NUM_SK      = C.CLM_NUM_SK
                            AND CL.CLM_FROM_DT     = C.CLM_FROM_DT
                            
                            INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_PRFNL  CLP
                            ON  CL.GEO_BENE_SK     = CLP.GEO_BENE_SK
                            AND CL.CLM_DT_SGNTR_SK = CLP.CLM_DT_SGNTR_SK
                            AND CL.CLM_TYPE_CD     = CLP.CLM_TYPE_CD
                            AND CL.CLM_NUM_SK      = CLP.CLM_NUM_SK
                            AND CL.CLM_LINE_NUM    = CLP.CLM_LINE_NUM
                            
                            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.PSA_PRVDR_SPCLTY_FF  SPC
                            ON SPC.PRVDR_SPCLTY_CD = CLP.CLM_PRVDR_SPCLTY_CD
                            
                            INNER JOIN IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_ZIP5_CD BZ5
                            ON C.GEO_BENE_SK = BZ5.GEO_SK
                            
                        WHERE C.CLM_FINL_ACTN_IND='Y'
                          AND C.CLM_TYPE_CD in (71,72)
                          AND CL.CLM_LINE_FROM_DT between TO_DATE('{YYYY}-01-01','YYYY-MM-DD') AND TO_DATE('{YYYY}-12-31','YYYY-MM-DD')  
                          AND CL.CLM_LINE_ALOWD_CHRG_AMT > 0 
                            
                        GROUP BY BZ5.GEO_ZIP5_CD, SPC.PRVDR_SPCLTY_DESC
                        --ORDER BY Bene_ZIP_CD, SPC.PRVDR_SPCLTY_DESC
                        
                        )

                    -- Example:
                    --PIVOT(MAX(CHRG_AMT) FOR PRVDR_SPCLTY_DESC IN ('Addiction Medicine','Anesthesiology','Cardiac Surgery')) AS P
                    --(Bene_ZIP_CD, "Addiction Medicine", "Anesthesiology","Cardiac Surgery")    

                    PIVOT(MAX(CHRG_AMT) FOR PRVDR_SPCLTY_DESC IN ({PIV_COL_DESC_LIST})) AS P
                    (Bene_ZIP_CD, {PIV_COL_NAME_LIST})    
                    
                    ORDER BY BENE_ZIP_CD 
 
 )
                        FILE_FORMAT = (TYPE = CSV field_delimiter = ","  ESCAPE_UNENCLOSED_FIELD=NONE FIELD_OPTIONALLY_ENCLOSED_BY = '"' NULL_IF=() )
                        SINGLE = TRUE  HEADER=TRUE  max_file_size=5368709120  """, con, exit_on_error=True)


   
   #**************************************
   # End Application
   #**************************************    
   snowconvert_helpers.quit_application()
   
except Exception as e:
   print(e)
   
   # Let shell script know that python code failed.
   bPythonExceptionOccurred=True   
   
finally:
   if con is not None:
      con.close()

   # Let shell script know that python code failed.      
   if bPythonExceptionOccurred == True:
      sys.exit(12) 
   else:   
      snowconvert_helpers.quit_application()

