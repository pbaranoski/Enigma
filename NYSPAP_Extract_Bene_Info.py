#!/usr/bin/env python
########################################################################################################
# Name:  NYSPAP_Extract_Bene_Info.py
#
# Desc: NYSPAP Extract of Bene Contract Coverage Information
#
# Created: Paul Baranoski 10/5/2022
# Modified:
#
# Paul Baranoski 2022-11-09 Remove code to send success email. Success email will be sent
#                           from script.
# Paul Baranoski 2022-11-30 Added UNION and SELECT to FNDR_FILE in SQL WITH statement to account for 
#                           MBIs in Finder file.  
# Paul Baranoski 2023-02-15 Updated SQL for BENE_RTR_DRUG_PLAN. The prior SQL PARTITION by BENE_Sk statement 
#                           was getting max(DX.IDR_TRANS_EFCTV_TS) within Bene only, instead of
#                           applying filters first then Applying the PARTITION by BENE_SK.   
#
#                           The QUALIFY statement applies the Partition filter after the other filters
#                           have been applied. The original SQL applied the QUALIFY before the
#                           filter "{BENE_RNG_DT} between DX.BENE_RNG_BGN_DT and DX.BENE_RNG_END_DT".
#                           I believe this is incorrect, and could filter out rows that should be included.
########################################################################################################
import os
import sys
import datetime
from datetime import datetime
import sendEmail

currentDirectory = os.path.dirname(os.path.realpath(__file__))
rootDirectory = os.path.abspath(os.path.join(currentDirectory, ".."))
utilDirectory = os.getenv('CMN_UTIL')

sys.path.append(rootDirectory)
sys.path.append(utilDirectory)
script_name = os.path.basename(__file__)

import snowconvert_helpers
from snowconvert_helpers import Export

########################################################################################################
# VARIABLE ASSIGNMENT
########################################################################################################
con = None 
now = datetime.now()
date_time = now.strftime("%m/%d/%Y, %H:%M:%S")

# Use Timestamp generated by shell script so logs and output files will have timestamp
TMSTMP=os.getenv('TMSTMP')
ENVNAME=os.getenv('ENVNAME')
# date format YYYY-MM-DD
BENE_RNG_DT=os.getenv('BENE_RNG_DT')

YYYYMM = BENE_RNG_DT[0:7].replace("-","")

# boolean - Python Exception status
bPythonExceptionOccurred=False

########################################################################################################
# RUN
########################################################################################################
print('')
print("Run date and time: " + date_time  )
print('')

########################################################################################################
# Method to execute the extract SQL using Timestamp 
########################################################################################################
try:
   snowconvert_helpers.configure_log()
   con = snowconvert_helpers.log_on()   
   snowconvert_helpers.execute_sql_statement(f"alter session set query_tag='{script_name}'",con,exit_on_error = True)
   snowconvert_helpers.execute_sql_statement("""USE WAREHOUSE ${sf_xtr_warehouse}""", con,exit_on_error = True)
   
   #**************************************
   #   Extract NYSPAP Bene Contract data  
   #**************************************   
   snowconvert_helpers.execute_sql_statement(f"""COPY INTO @BIA_{ENVNAME}.CMS_STAGE_XTR_{ENVNAME}.BIA_{ENVNAME}_XTR_NYSPAP_STG/NYSPAP_EXTRACT.Y{YYYYMM}.{TMSTMP}.csv.gz
                                                FROM (

            WITH GEO_ZIP as (

                SELECT a.GEO_SK, a.GEO_ZIP4_CD,        a.GEO_CNGRSNL_DIST_ID, a.GEO_FIPS_CNTY_CD, a.GEO_FIPS_STATE_CD, a.GEO_VLDTN_CD
                  FROM IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_ZIP9_CD a

                UNION 

                SELECT b.GEO_SK, b.BENE_INVLD_ZIP4_CD, b.GEO_CNGRSNL_DIST_ID, b.GEO_FIPS_CNTY_CD, b.GEO_FIPS_STATE_CD, b.GEO_VLDTN_CD 
                  FROM IDRC_{ENVNAME}.CMS_FCT_BENE_MTRLZD_{ENVNAME}.BENE_INVLD_ZIP9_CD b

            ) 

            ,BENE_RTR_DRUG_PLAN as (

                SELECT *
				  FROM IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE_RTR_DRUG_PLAN DX 
				WHERE DX.IDR_LTST_TRANS_FLG = 'Y' 
				  AND to_date(DX.IDR_TRANS_OBSLT_TS) = to_date('9999-12-31','YYYY-MM-DD')
				  AND to_date('{BENE_RNG_DT}','YYYY-MM-DD') between DX.BENE_RNG_BGN_DT and DX.BENE_RNG_END_DT
				QUALIFY DX.IDR_TRANS_EFCTV_TS = max(DX.IDR_TRANS_EFCTV_TS)  over (partition by DX.bene_sk) 

            ) 

            , FNDR_FILE as (

                SELECT DISTINCT *
                FROM (
                    SELECT
                        BFCT.BENE_SK,
                        BFCT.BENE_FCT_EFCTV_DT,
                        BFCT.BENE_BIC_CD,
                        BFCT.BENE_CAN_NUM,
                        BFCT.BENE_CVRG_TYPE_CD,
                        BFCT.BENE_PTAPTB_STRT_DT,
                        BFCT.BENE_PTD_STUS_CD,
                        BFCT.CNTRCT_PTAPTB_NUM,
                        BFCT.CNTRCT_PBP_PTAPTB_NUM,
                        BFCT.CNTRCT_PBP_PTAPTB_EFCTV_DT,
                        BFCT.GEO_SK,
                        BFCT.GEO_ZIP4_CD,
                        FF.SSN,
                        FF.GENDER,
                        FF.NYEPIC_NUM
                    FROM BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.NYSPAP_FF FF 

                    INNER JOIN IDRC_{ENVNAME}.CMS_FCT_BENE_MTRLZD_{ENVNAME}.BENE_FCT_TRANS BFCT
                    ON  TRIM(BFCT.BENE_CAN_NUM) = TRIM(FF.BENE_CAN_NUM)
                    AND TRIM(BFCT.BENE_BIC_CD)  = TRIM(FF.BIC_CD)
                 
                    WHERE to_date('{BENE_RNG_DT}') between BFCT.BENE_FCT_EFCTV_DT AND BFCT.BENE_FCT_OBSLT_DT
                    AND to_date(BFCT.IDR_TRANS_OBSLT_TS) = '9999-12-31'

                    UNION
                    
                    SELECT
                        BFCT.BENE_SK,
                        BFCT.BENE_FCT_EFCTV_DT,
                        BFCT.BENE_BIC_CD,
                        BFCT.BENE_CAN_NUM,
                        BFCT.BENE_CVRG_TYPE_CD,
                        BFCT.BENE_PTAPTB_STRT_DT,
                        BFCT.BENE_PTD_STUS_CD,
                        BFCT.CNTRCT_PTAPTB_NUM,
                        BFCT.CNTRCT_PBP_PTAPTB_NUM,
                        BFCT.CNTRCT_PBP_PTAPTB_EFCTV_DT,
                        BFCT.GEO_SK,
                        BFCT.GEO_ZIP4_CD,
                        FF.SSN,
                        FF.GENDER,
                        FF.NYEPIC_NUM
                    FROM BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.NYSPAP_FF FF 

                    INNER JOIN IDRC_{ENVNAME}.CMS_FCT_BENE_MTRLZD_{ENVNAME}.BENE_FCT_TRANS BFCT
                    ON  FF.BENE_CAN_NUM||FF.BIC_CD = BFCT.BENE_MBI_ID  
                 
                    WHERE to_date('{BENE_RNG_DT}') between BFCT.BENE_FCT_EFCTV_DT AND BFCT.BENE_FCT_OBSLT_DT
                    AND to_date(BFCT.IDR_TRANS_OBSLT_TS) = '9999-12-31'
                    
                )    
            )

            , BENE_W_DRUG_PLAN as (

                SELECT DISTINCT 
                        FNDR.BENE_CAN_NUM
                        ,FNDR.BENE_BIC_CD  
                        ,FNDR.SSN
                        ,FNDR.GENDER
                        ,FNDR.NYEPIC_NUM

                        ,case when PBP_NUM.CNTRCT_PBP_NAME IS NULL
                             then 'NA' 
                             else PBP_NUM.CNTRCT_PBP_NAME 
                        end  as CNTRCT_PBP_NAME

                        ,case when PBP_NUM.CNTRCT_NUM IS NULL 
                             then 'NA' 
                             else PBP_NUM.CNTRCT_NUM 
                        end as CNTRCT_NUM

                        ,to_char(FNDR.BENE_PTAPTB_STRT_DT,'YYYYMMDD') AS START_DT

                        ,case when PBP_NUM.CNTRCT_PBP_NUM IS NULL 
                             then 'NA'  
                             else PBP_NUM.CNTRCT_PBP_NUM 
                        end as PBP_NUM

                        ,FNDR.BENE_CVRG_TYPE_CD
                        ,BCTC.BENE_CVRG_TYPE_CD_DESC

                        ,FNDR.BENE_PTD_STUS_CD
                        ,GIZ.GEO_FIPS_STATE_CD
                        ,B.BENE_MBI_ID

                FROM FNDR_FILE FNDR

                INNER JOIN IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE B
                ON FNDR.BENE_SK = B.BENE_SK
                  
                -- Original SQL used LEFT OUTER JOIN. However, WHERE Filter in original SQL "BENE_RNG_DT BETWEEN BENE_RNG_BGN_DT and BENE_RNG_END_DT" would 
                -- filter out null rows, thus making the LEFT OUTER JOIN an INNER JOIN
                INNER JOIN BENE_RTR_DRUG_PLAN BRDP
                ON BRDP.BENE_SK  =  B.BENE_SK  

                LEFT OUTER JOIN  IDRC_{ENVNAME}.CMS_DIM_CNTRCT_{ENVNAME}.CNTRCT_PBP_NUM  PBP_NUM
                ON  FNDR.CNTRCT_PTAPTB_NUM     =  PBP_NUM.CNTRCT_NUM
                AND FNDR.CNTRCT_PBP_PTAPTB_NUM =  PBP_NUM.CNTRCT_PBP_NUM
                AND to_date('{BENE_RNG_DT}','YYYY-MM-DD') between PBP_NUM.CNTRCT_PBP_BGN_DT and PBP_NUM.CNTRCT_PBP_END_DT

                INNER JOIN IDRC_{ENVNAME}.CMS_DIM_BENE_CD_{ENVNAME}.BENE_CVRG_TYPE_CD BCTC
                ON FNDR.BENE_CVRG_TYPE_CD     =  BCTC.BENE_CVRG_TYPE_CD

                INNER JOIN GEO_ZIP GIZ
                ON  GIZ.GEO_SK       = FNDR.GEO_SK
                AND GIZ.GEO_ZIP4_CD  = FNDR.GEO_ZIP4_CD
                
            )

            ,BENE_ALL_PLANS as (

                SELECT DISTINCT
                         FNDR.BENE_CAN_NUM
                        ,FNDR.BENE_BIC_CD  
                        ,FNDR.SSN
                        ,FNDR.GENDER
                        ,FNDR.NYEPIC_NUM
                    
                        ,case when PBP_NUM.CNTRCT_PBP_NAME IS NULL 
                             then 'NA' 
                             else PBP_NUM.CNTRCT_PBP_NAME 
                        end  as CNTRCT_PBP_NAME

                        ,case when PBP_NUM.CNTRCT_NUM IS NULL 
                             then 'NA' 
                             else PBP_NUM.CNTRCT_NUM 
                        end as CNTRCT_NUM

                        ,to_char(FNDR.BENE_PTAPTB_STRT_DT,'YYYYMMDD') AS START_DT

                        ,case when PBP_NUM.CNTRCT_PBP_NUM IS NULL 
                             then 'NA'  
                             else PBP_NUM.CNTRCT_PBP_NUM 
                        end as PBP_NUM

                        ,FNDR.BENE_CVRG_TYPE_CD
                        ,BCTC.BENE_CVRG_TYPE_CD_DESC

                        ,FNDR.BENE_PTD_STUS_CD
                        ,GIZ.GEO_FIPS_STATE_CD
                        ,B.BENE_MBI_ID

                FROM FNDR_FILE FNDR

                INNER JOIN IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE B
                ON FNDR.BENE_SK = B.BENE_SK

                -- Where Clause makes this LEFT OUTER JOIN an INNER JOIN
                LEFT OUTER JOIN  IDRC_{ENVNAME}.CMS_DIM_CNTRCT_{ENVNAME}.CNTRCT_PBP_NUM  PBP_NUM
                ON  FNDR.CNTRCT_PTAPTB_NUM      =  PBP_NUM.CNTRCT_NUM
                AND FNDR.CNTRCT_PBP_PTAPTB_NUM  =  PBP_NUM.CNTRCT_PBP_NUM
                AND to_date('{BENE_RNG_DT}','YYYY-MM-DD') between PBP_NUM.CNTRCT_PBP_BGN_DT and PBP_NUM.CNTRCT_PBP_END_DT

                INNER JOIN IDRC_{ENVNAME}.CMS_DIM_BENE_CD_{ENVNAME}.BENE_CVRG_TYPE_CD BCTC
                ON FNDR.BENE_CVRG_TYPE_CD   =   BCTC.BENE_CVRG_TYPE_CD

                INNER JOIN GEO_ZIP GIZ
                ON  GIZ.GEO_SK      = FNDR.GEO_SK
                AND GIZ.GEO_ZIP4_CD = FNDR.GEO_ZIP4_CD

                WHERE PBP_NUM.CNTRCT_NUM     IS NOT NULL 
                  AND PBP_NUM.CNTRCT_PBP_NUM IS NOT NULL

            )


             
            SELECT DISTINCT

                    RPAD(BENE_CAN_NUM,9,' ') as BENE_CAN_NUM,
                    RPAD(BENE_BIC_CD,2,' ')   as BIC_CD ,
                    RPAD(SSN,9,' ')           as SSN,
                    RPAD(GENDER,1,' ')        as GENDER,
                    RPAD(NYEPIC_NUM,9,' ')    as NYEPIC_NUM,
                    
                    RPAD(
                        case when CNTRCT_PBP_NAME is null 
                             then 'NA' 
                             else CNTRCT_PBP_NAME 
                        end,50,' ')   as NAME,
                    
                    RPAD(
                        case when CNTRCT_NUM IS NULL 
                             then 'NA' 
                             else CNTRCT_NUM 
                        end,5,' ') as CNTRCT_NUM,
                    
                    START_DT,
                    
                    RPAD(
                        case when PBP_NUM IS NULL 
                             then 'NA'  
                             else PBP_NUM 
                        end,3,' ') as PBP_NUM,

                    RPAD(BENE_CVRG_TYPE_CD,2,' ')      as TYPE_CD,
                    RPAD(BENE_CVRG_TYPE_CD_DESC,5,' ') as TYPE_DESC,
                    
                    RPAD(BNFT_CD,1,' ')              as BNFT_CD,
                    RPAD(BENE_PTD_STUS_CD,1,' ')     as STUS_CD,
                    RPAD(GEO_FIPS_STATE_CD,2,' ')    as STATE_CODE,
                    RPAD(BENE_MBI_ID,11,' ')         as MBI_ID
            FROM (

                SELECT DPY.*
                      ,'Y' as BNFT_CD
                FROM BENE_W_DRUG_PLAN DPY 

                UNION
                
                (
                    SELECT APN.* 
                          ,'N' as BNFT_CD
                    FROM BENE_ALL_PLANS APN

                    MINUS 

                    SELECT DPN.*
                          ,'N' as BNFT_CD
                    FROM BENE_W_DRUG_PLAN DPN
                )

            ) 
            

 )
                        FILE_FORMAT = (TYPE = CSV field_delimiter = none  ESCAPE_UNENCLOSED_FIELD=NONE FIELD_OPTIONALLY_ENCLOSED_BY = none )
                        SINGLE = TRUE  max_file_size=5368709120  """, con, exit_on_error=True)


   
   #**************************************
   # End Application
   #**************************************    
   snowconvert_helpers.quit_application()
   
except Exception as e:
   print(e)
   
   # Let shell script know that python code failed.
   bPythonExceptionOccurred=True   
   
finally:
   if con is not None:
      con.close()

   # Let shell script know that python code failed.      
   if bPythonExceptionOccurred == True:
      sys.exit(12) 
   else:   
      snowconvert_helpers.quit_application()

