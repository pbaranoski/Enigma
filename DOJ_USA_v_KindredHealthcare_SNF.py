#!/usr/bin/env python
########################################################################################################
# Name: DOJ_USA_v_KindredHealthcare_SNF.py
#
# Desc: DOJ USA_v_KindredHealthcare_SNF SQL
#
# Modified:
#
# Paul Baranoski 2024-02-05 Create SQL
# Sean Whitelock 2025-01-15 Update PFRVDR_LGL_NAME column from 70 to 100.
########################################################################################################
import os
import sys
import datetime
from datetime import datetime
import sendEmail

currentDirectory = os.path.dirname(os.path.realpath(__file__))
rootDirectory = os.path.abspath(os.path.join(currentDirectory, ".."))
utilDirectory = os.getenv('CMN_UTIL')

sys.path.append(rootDirectory)
sys.path.append(utilDirectory)
script_name = os.path.basename(__file__)

import snowconvert_helpers
from snowconvert_helpers import Export

########################################################################################################
# VARIABLE ASSIGNMENT
########################################################################################################
con = None 
now = datetime.now()
date_time = now.strftime("%m/%d/%Y, %H:%M:%S")

# Use Timestamp generated by shell script so logs and output files will have timestamp
TMSTMP=os.getenv('UNIQUE_FILE_TMSTMP')
ENVNAME=os.getenv('ENVNAME')

EXT_FROM_DT=os.getenv('EXT_FROM_DT')
EXT_TO_DT=os.getenv('EXT_TO_DT')

SINGLE_FILE_PHRASE=os.getenv('SINGLE_FILE_PHRASE')



# boolean - Python Exception status
bPythonExceptionOccurred=False

# Create main SQL using HIPPS cds; Create selects filtering by each NPI joined to NPI_FINDER_TBL;  UNION all TABLES in end with DISTINCT
# --> 83,338,722 total rows of data

     
########################################################################################################
# RUN
########################################################################################################
print('')
print("Run date and time: " + date_time  )
print('')

########################################################################################################
# Method to execute the extract SQL using Timestamp 
########################################################################################################
try:
   snowconvert_helpers.configure_log()
   con = snowconvert_helpers.log_on()   
   snowconvert_helpers.execute_sql_statement(f"alter session set query_tag='{script_name}'",con,exit_on_error = True)
   snowconvert_helpers.execute_sql_statement("""USE WAREHOUSE ${sf_xtr_warehouse}""", con,exit_on_error = True)
   
   #**************************************
   #   Extract NYSPAP Bene Contract data  
   #**************************************   
   snowconvert_helpers.execute_sql_statement(f"""COPY INTO @BIA_{ENVNAME}.CMS_STAGE_XTR_{ENVNAME}.BIA_{ENVNAME}_XTR_DOJ_STG/DOJ_USA_V_KINDRED_EXTRACT_{TMSTMP}.txt.gz
                                                FROM (

            WITH SNF_PPS_CLAIMS AS (

                  SELECT 
                       'START'
                      ,C.CLM_TYPE_CD
                      ,TO_CHAR(CL.CLM_LINE_NUM,'FM00000') AS CLM_LINE_NUM
                      ,RPAD(COALESCE(SUBSTR(TRIM(C.CLM_HIC_NUM),1,12),''),12,' ') AS BENE_HICN
                      ,RPAD(REPLACE(COALESCE(C.BENE_SEX_CD,''),'~',''),1,' ') AS BENE_SEX_CD
                      ,RPAD(COALESCE(TO_CHAR(C.CLM_PTNT_BIRTH_DT, 'YYYYMMDD'),''),8,' ') AS BENE_DOB
                      
                      ,RPAD(COALESCE(BENE.BENE_LAST_NAME,''),40,' ')    AS BENE_LAST_NAME 
                      ,RPAD(COALESCE(BENE.BENE_1ST_NAME,''),30,' ')     AS BENE_1ST_NAME
                      ,RPAD(COALESCE(BENE.BENE_MIDL_NAME,''),15,' ')    AS BENE_MIDL_NAME
                
                      ,RPAD(REPLACE(COALESCE(GST.GEO_SSA_STATE_CD,''),'~',''),2,' ')  AS SSA_STATE_CD
                      ,RPAD(REPLACE(COALESCE(ZIP5.GEO_ZIP5_CD,''),'~',''),5,' ')    AS BENE_MAILING_ZIPCD      
                      ,TO_CHAR(CLM_ACTV_CARE_FROM_DT,'YYYYMMDD')  AS CLM_ACTV_CARE_FROM_DT
                      ,TO_CHAR(CDS.CLM_DSCHRG_DT,'YYYYMMDD')      AS CLM_DSCHRG_DT
                      ,TO_CHAR(C.CLM_FROM_DT,'YYYYMMDD')          AS CLM_FROM_DT
                      ,TO_CHAR(C.CLM_THRU_DT,'YYYYMMDD')          AS CLM_THRU_DT
                      ,RPAD(C.CLM_CNTL_NUM,40,' ')                AS CLAIM_CONTROL_NBR
                      ,RPAD(COALESCE(C.CLM_ORIG_CNTL_NUM,''),40,' ') AS ORIG_CLAIM_CONTROL_NBR
                      ,CI.CLM_TRANS_CD
                      ,RPAD(COALESCE(C.CLM_DISP_CD,''),2,' ')     AS CLM_DISP_CD
                      ,CI.BENE_PTNT_STUS_CD
                      ,RPAD(CASE WHEN COALESCE(CI.CLM_ADMSN_TYPE_CD,' ') = '~' THEN ' ' ELSE CI.CLM_ADMSN_TYPE_CD END,2,' ')  AS CLM_ADMSN_TYPE_CD
                      ,RPAD(CASE WHEN COALESCE(CI.CLM_ADMSN_SRC_CD,' ')  = '~' THEN ' ' ELSE CI.CLM_ADMSN_SRC_CD  END,2,' ')  AS CLM_ADMSN_SRC_CD
                      ,CL.CLM_LINE_REV_CTR_CD
                      ,C.CLM_BILL_FAC_TYPE_CD
                      ,C.CLM_BILL_CLSFCTN_CD  
                      ,TO_CHAR(CI.DGNS_DRG_VRSN_NUM,'FM00')  AS  DGNS_DRG_VRSN_NUM 
                      ,TO_CHAR(CI.DGNS_DRG_CD,'FM0000')      AS  DGNS_DRG_CD 
                      ,RPAD(CPM.CLM_PRNCPL_DGNS_CD,7,' ')    AS  CLM_PRNCPL_DGNS_CD 
                      ,RPAD(COALESCE(DC1.DGNS_CD_DESC,' '),250,' ')  AS  DGNS_CD_DESC 
                      ,RPAD(CASE WHEN CL.CLM_LINE_NDC_CD = '~' THEN ' ' ELSE CL.CLM_LINE_NDC_CD END,11,' ') AS CLM_LINE_NDC_CD
                      ,RPAD(COALESCE(CL.CLM_LINE_HCPCS_CD,' '),5,' ')  AS CLM_LINE_HCPCS_CD
                      ,RPAD(CL.HCPCS_1_MDFR_CD,2,' ')  AS HCPCS_1_MDFR_CD
                      ,RPAD(CL.HCPCS_2_MDFR_CD,2,' ')  AS HCPCS_2_MDFR_CD
                      ,RPAD(CL.HCPCS_3_MDFR_CD,2,' ')  AS HCPCS_3_MDFR_CD
                      ,RPAD(CL.HCPCS_4_MDFR_CD,2,' ')  AS HCPCS_4_MDFR_CD
                
                      ,RPAD(C.CLM_BLG_PRVDR_OSCAR_NUM,10,' ')    AS  CLM_BLG_PRVDR_OSCAR_NUM 
                      ,RPAD(C.CLM_BLG_PRVDR_NPI_NUM,10,' ')     AS  CLM_BLG_PRVDR_NPI_NUM
                      ,RPAD(C.CLM_ATNDG_PRVDR_NPI_NUM,10,' ')   AS  CLM_ATNDG_PRVDR_NPI_NUM
                      ,RPAD(C.PRVDR_ATNDG_PRVDR_NPI_NUM,10,' ') AS  PRVDR_ATNDG_PRVDR_NPI_NUM
                
                      ,RPAD(CASE WHEN C.PRVDR_OPRTG_PRVDR_NPI_NUM = '~' THEN ' ' ELSE C.PRVDR_OPRTG_PRVDR_NPI_NUM END,10,' ') AS PRVDR_OPRTG_PRVDR_NPI_NUM
                      ,RPAD(CASE WHEN C.PRVDR_OTHR_PRVDR_NPI_NUM = '~' THEN ' ' ELSE C.PRVDR_OTHR_PRVDR_NPI_NUM END,10,' ')  AS PRVDR_OTHR_PRVDR_NPI_NUM
                      
                      ,RPAD(REPLACE(CL.PRVDR_FAC_PRVDR_NPI_NUM,'~',''),10,' ')  AS PRVDR_FAC_PRVDR_NPI_NUM
                      ,RPAD(CASE WHEN C.PRVDR_SRVC_PRVDR_NPI_NUM = '~' THEN ' ' ELSE C.PRVDR_SRVC_PRVDR_NPI_NUM END,10,' ')  AS PRVDR_SRVC_PRVDR_NPI_NUM
                      
		      --***\/***
                      --,RPAD(COALESCE(P.PRVDR_LGL_NAME,' '),70,' ')         AS  PRVDR_LGL_NAME
		      ,RPAD(COALESCE(P.PRVDR_LGL_NAME,' '),100,' ')         AS  PRVDR_LGL_NAME
		      --***/\***

                      ,RPAD(COALESCE(P.PRVDR_MLG_TEL_NUM,' '),20,' ')      AS  PRVDR_MLG_TEL_NUM
                      ,RPAD(COALESCE(P.PRVDR_MLG_LINE_1_ADR,' '),100,' ')  AS  PRVDR_MLG_LINE_1_ADR
                      ,RPAD(COALESCE(P.PRVDR_MLG_LINE_2_ADR,' '),100,' ')  AS  PRVDR_MLG_LINE_2_ADR
                      
                      ,RPAD(COALESCE(P.PRVDR_INVLD_MLG_PLC_NAME,' '),40,' ')  AS  PRVDR_INVLD_MLG_PLC_NAME 
                      ,RPAD(COALESCE(P.PRVDR_INVLD_MLG_STATE_CD,' '),2,' ')   AS  PRVDR_INVLD_MLG_STATE_CD
                      ,RPAD(COALESCE(P.PRVDR_INVLD_MLG_ZIP_CD,' '),9,' ')     AS  PRVDR_INVLD_MLG_ZIP_CD 
                
                
                      -- NUMERIC FORMATTING -- we should include decimal place and sign going forward?
                      ,TO_CHAR(C.CLM_PMT_AMT,'S000000000000000.00')  AS  CLM_PMT_AMT 
                      ,RPAD(CI.CLM_MDCR_NPMT_RSN_CD,2,' ')  AS  CLM_MDCR_NPMT_RSN_CD 
                               
                      ,TO_CHAR(COALESCE(C.CLM_PRVDR_PMT_AMT,0),'S00000000000.00') AS  CLM_PRVDR_PMT_AMT 
                      ,TO_CHAR(CL.CLM_LINE_SRVC_UNIT_QTY,'S0000000000000000.0000')  AS  CLM_LINE_SRVC_UNIT_QTY 
                               
                      ,TO_CHAR(COALESCE(C.CLM_BENE_PD_AMT,0),'S000000000000000.00')  AS CLM_BENE_PD_AMT  
                      ,TO_CHAR(C.CLM_SBMT_CHRG_AMT,'S000000000000000.00')  AS CLM_SBMT_CHRG_AMT 
                               
                      ,TO_CHAR(COALESCE(C.CLM_ALOWD_CHRG_AMT,0),'S000000000000000.00')  AS CLM_ALOWD_CHRG_AMT 
                      ,TO_CHAR(COALESCE(C.CLM_MDCR_DDCTBL_AMT,0),'S000000000000000.00') AS CLM_MDCR_DDCTBL_AMT 
                               
                      ,TO_CHAR(CL.CLM_LINE_CVRD_PD_AMT,'S00000000000.00')  AS CLM_LINE_CVRD_PD_AMT
                               
                      ,TO_CHAR(CL.CLM_LINE_BENE_PD_AMT,'S000000000000000.00')     AS  CLM_LINE_BENE_PD_AMT
                      ,TO_CHAR(CL.CLM_LINE_BENE_PMT_AMT,'S000000000000000.00')    AS  CLM_LINE_BENE_PMT_AMT
                               
                      ,TO_CHAR(CL.CLM_LINE_PRVDR_PMT_AMT,'S00000000000.00')       AS  CLM_LINE_PRVDR_PMT_AMT
                      ,TO_CHAR(CL.CLM_LINE_MDCR_DDCTBL_AMT,'S00000000000.00')     AS  CLM_LINE_MDCR_DDCTBL_AMT 
                
                      ,RPAD(COALESCE(C.CLM_NCH_PRMRY_PYR_CD,' '),1,' ') AS CLM_NCH_PRMRY_PYR_CD
                      ,TO_CHAR(COALESCE(CI.CLM_MDCR_INSTNL_BENE_PD_AMT,0),'S00000000000.00')  AS CLM_MDCR_INSTNL_BENE_PD_AMT
                      ,TO_CHAR(CI.CLM_MDCR_INSTNL_PRMRY_PYR_AMT,'S00000000000.00')            AS CLM_MDCR_INSTNL_PRMRY_PYR_AMT
                      ,TO_CHAR(COALESCE(CL.CLM_LINE_MDCR_COINSRNC_AMT,0),'S00000000000.00')   AS CLM_LINE_MDCR_COINSRNC_AMT
                               
                      ,TO_CHAR(COALESCE(CL.CLM_LINE_PTB_BLOOD_DDCTBL_QTY,0),'FM000') AS CLM_LINE_PTB_BLOOD_DDCTBL_QTY
                               
                      ,TO_CHAR(CL.CLM_LINE_SBMT_CHRG_AMT,'S000000000000000.00')     AS  CLM_LINE_SBMT_CHRG_AMT
                      ,TO_CHAR(COALESCE(CL.CLM_LINE_ALOWD_CHRG_AMT,0),'S000000000000000.00') AS CLM_LINE_ALOWD_CHRG_AMT
                      ,TO_CHAR(COALESCE(CL.CLM_LINE_OTHR_TP_PD_AMT,0),'S000000000000000.00') AS CLM_LINE_OTHR_TP_PD_AMT
                
                      ,TO_CHAR(COALESCE(C.CLM_OTHR_TP_PD_AMT,0),'S000000000000000.00')       AS CLM_OTHR_TP_PD_AMT
                      ,TO_CHAR(COALESCE(CL.CLM_LINE_BENE_COPMT_AMT,0),'S000000000000000.00') AS CLM_LINE_BENE_COPMT_AMT
                      ,CLM_FINL_ACTN_IND
                      ,RPAD(COALESCE(C.CLM_BENE_MBI_ID,''),11,' ') AS BENE_MBI_ID
                      ,'END'
                  
                  FROM IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM C   
                
                  INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_DT_SGNTR CDS
                  ON C.CLM_DT_SGNTR_SK = CDS.CLM_DT_SGNTR_SK
                  
                  INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_INSTNL  CI
                  ON  C.GEO_BENE_SK     = CI.GEO_BENE_SK
                  AND C.CLM_DT_SGNTR_SK = CI.CLM_DT_SGNTR_SK
                  AND C.CLM_TYPE_CD     = CI.CLM_TYPE_CD
                  AND C.CLM_NUM_SK      = CI.CLM_NUM_SK 
                
                  INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_PROD_MTRLZD CPM 
                  ON  C.GEO_BENE_SK     = CPM.GEO_BENE_SK
                  AND C.CLM_DT_SGNTR_SK = CPM.CLM_DT_SGNTR_SK
                  AND C.CLM_TYPE_CD     = CPM.CLM_TYPE_CD
                  AND C.CLM_NUM_SK      = CPM.CLM_NUM_SK
                      
                  INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE CL
                  ON  C.GEO_BENE_SK     = CL.GEO_BENE_SK
                  AND C.CLM_DT_SGNTR_SK = CL.CLM_DT_SGNTR_SK
                  AND C.CLM_TYPE_CD     = CL.CLM_TYPE_CD
                  AND C.CLM_NUM_SK      = CL.CLM_NUM_SK
                  AND C.CLM_FROM_DT     = CL.CLM_FROM_DT
                
                  INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_INSTNL CLI
                  ON  CL.GEO_BENE_SK     = CLI.GEO_BENE_SK
                  AND CL.CLM_DT_SGNTR_SK = CLI.CLM_DT_SGNTR_SK
                  AND CL.CLM_TYPE_CD     = CLI.CLM_TYPE_CD
                  AND CL.CLM_NUM_SK      = CLI.CLM_NUM_SK
                  AND CL.CLM_LINE_NUM    = CLI.CLM_LINE_NUM
                
                  -- Getting PRVDR LGL_NAME --> for BILLING PRVDR_NPI_NUM?
                  LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_DIM_PRVDR_{ENVNAME}.PRVDR P
                  ON C.CLM_BLG_PRVDR_NPI_NUM = P.PRVDR_NPI_NUM
                      
                  LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_VDM_VIEW_MDCR_{ENVNAME}.V2_MDCR_DGNS_CD DC1
                  ON  CPM.CLM_PRNCPL_DGNS_CD = DC1.DGNS_CD
                  AND C.CLM_THRU_DT BETWEEN DC1.DGNS_CD_BGN_DT AND DC1.DGNS_CD_END_DT
                
                  INNER JOIN IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE BENE
                  ON C.BENE_SK = BENE.BENE_SK
                
                  -- Zip code should be for what was active at time of claim  
                  INNER JOIN IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_ZIP5_CD ZIP5
                  ON C.GEO_BENE_SK = ZIP5.GEO_SK
                 
                  INNER JOIN IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_FIPS_STATE_CD GST
                  ON ZIP5.GEO_FIPS_STATE_CD = GST.GEO_FIPS_STATE_CD
                
                  LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_FIPS_CNTY_CD GCNTY
                  ON  ZIP5.GEO_FIPS_CNTY_CD   = GCNTY.GEO_FIPS_CNTY_CD
                  AND ZIP5.GEO_FIPS_STATE_CD  = GCNTY.GEO_FIPS_STATE_CD 
                
                  WHERE C.CLM_TYPE_CD IN ('20','30')
                    AND C.CLM_FINL_ACTN_IND = 'Y'
                    AND C.CLM_FROM_DT BETWEEN TO_DATE('2008-01-01','YYYY-MM-DD') AND TO_DATE('2018-12-16','YYYY-MM-DD') 
                    --AND C.CLM_BLG_PRVDR_NPI_NUM IN ('1396822904','1073691945')
                    AND CL.CLM_LINE_REV_CTR_CD = '0022' 
                    AND SUBSTR(CL.CLM_LINE_HCPCS_CD,1,3) IN (            
                            'CA1','CA2','CB1','CB2','CC1','CC2','CD1','CD2','CE1','CE2','HB1','HB2','HC1',
                            'HC2','HD1','HD2','HE1','HE2','LB1','LB2','LC1','LC2','LD1','LD2','LE1','LE2',
                            'PA1','PA2','PB1','PB2','PC1','PC2','PD1','PD2','PE1','PE2','RHA','RHB','RHC',
                            'RHL','RHX','RLA','RLB','RLX','RMA','RMB','RMC','RML','RMX','RUA','RUB','RUC',
                            'RUL','RUX','RVA','RVB','RVC','RVL','RVX','SE1','SE2','SE3','SSA','SSB','SSC',
                            'ES1','ES2','ES3' ) 
            )

            SELECT C.*
            FROM SNF_PPS_CLAIMS C
            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.DOJ_USA_KINDRED_FFTAB FF
            ON FF.NPI_NUM = C.CLM_BLG_PRVDR_NPI_NUM

            UNION

            SELECT C.*
            FROM SNF_PPS_CLAIMS C
            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.DOJ_USA_KINDRED_FFTAB FF
            ON FF.NPI_NUM = C.CLM_ATNDG_PRVDR_NPI_NUM

            UNION

            SELECT C.*
            FROM SNF_PPS_CLAIMS C
            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.DOJ_USA_KINDRED_FFTAB FF
            ON FF.NPI_NUM = C.PRVDR_ATNDG_PRVDR_NPI_NUM

            UNION

            SELECT C.*
            FROM SNF_PPS_CLAIMS C
            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.DOJ_USA_KINDRED_FFTAB FF
            ON FF.NPI_NUM = C.PRVDR_OPRTG_PRVDR_NPI_NUM

            UNION

            SELECT C.*
            FROM SNF_PPS_CLAIMS C
            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.DOJ_USA_KINDRED_FFTAB FF
            ON FF.NPI_NUM = C.PRVDR_OTHR_PRVDR_NPI_NUM

            UNION

            SELECT C.*
            FROM SNF_PPS_CLAIMS C
            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.DOJ_USA_KINDRED_FFTAB FF
            ON FF.NPI_NUM = C.PRVDR_SRVC_PRVDR_NPI_NUM

            UNION

            SELECT C.*
            FROM SNF_PPS_CLAIMS C
            INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.DOJ_USA_KINDRED_FFTAB FF
            ON FF.NPI_NUM = C.PRVDR_FAC_PRVDR_NPI_NUM

 )
                        FILE_FORMAT = (TYPE = CSV field_delimiter = "|"  ESCAPE_UNENCLOSED_FIELD=NONE FIELD_OPTIONALLY_ENCLOSED_BY = NONE NULL_IF=() EMPTY_FIELD_AS_NULL=FALSE )
                        {SINGLE_FILE_PHRASE}  max_file_size=5368709120  """, con, exit_on_error=True)


   
   #**************************************
   # End Application
   #**************************************    
   snowconvert_helpers.quit_application()
   
except Exception as e:
   print(e)
   
   # Let shell script know that python code failed.
   bPythonExceptionOccurred=True   
   
finally:
   if con is not None:
      con.close()

   # Let shell script know that python code failed.      
   if bPythonExceptionOccurred == True:
      sys.exit(12) 
   else:   
      snowconvert_helpers.quit_application()

