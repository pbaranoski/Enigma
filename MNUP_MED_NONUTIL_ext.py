#!/usr/bin/env python
########################################################################################################
# Name:  MNUP_MED_NONUTIL_ext.py
#
# Desc: MNUP Annual Extract of Medical Non-Utilization for SSA
#
# Created: Paul Baranoski 11/23/2022
# Modified:
#
# Paul Baranoski 2022-11-23 Created python code.
# 
# Paul Baranoski 2023-08-03 Change extract file extension from .csv to .txt. Also, changed a '.' to '_' 
#                           so that EFT processing would work correctly.                         
########################################################################################################
import os
import sys
import datetime
from datetime import datetime
import sendEmail

currentDirectory = os.path.dirname(os.path.realpath(__file__))
rootDirectory = os.path.abspath(os.path.join(currentDirectory, ".."))
utilDirectory = os.getenv('CMN_UTIL')

sys.path.append(rootDirectory)
sys.path.append(utilDirectory)
script_name = os.path.basename(__file__)

import snowconvert_helpers
from snowconvert_helpers import Export

########################################################################################################
# VARIABLE ASSIGNMENT
########################################################################################################
con = None 
now = datetime.now()
date_time = now.strftime("%m/%d/%Y, %H:%M:%S")

# Use Timestamp generated by shell script so logs and output files will have timestamp
TMSTMP=os.getenv('TMSTMP')
ENVNAME=os.getenv('ENVNAME')
MNUP_YR=os.getenv('MNUP_YR')


# boolean - Python Exception status
bPythonExceptionOccurred=False

########################################################################################################
# RUN
########################################################################################################
print('')
print("Run date and time: " + date_time  )
print('')

########################################################################################################
# Method to execute the extract SQL using Timestamp 
########################################################################################################
try:
   snowconvert_helpers.configure_log()
   con = snowconvert_helpers.log_on()   
   snowconvert_helpers.execute_sql_statement(f"alter session set query_tag='{script_name}'",con,exit_on_error = True)
   snowconvert_helpers.execute_sql_statement("""USE WAREHOUSE ${sf_xtr_warehouse}""", con,exit_on_error = True)
   
   #**************************************
   #   Extract MNUP Bene Contract data  
   #**************************************   
   snowconvert_helpers.execute_sql_statement(f"""COPY INTO @BIA_{ENVNAME}.CMS_STAGE_XTR_{ENVNAME}.BIA_{ENVNAME}_XTR_MNUPANNUAL_STG/MNUP_ANNUAL_EXTRACT_{MNUP_YR}_{TMSTMP}.txt.gz
                                                FROM (


                WITH SSA_MNUP_BENE_MATCH as (
                    
                    SELECT DISTINCT BENE.BENE_SK, TRIM(BENE.BENE_HIC_NUM) as BENE_HIC_NUM 
                    FROM IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE  BENE
                    INNER JOIN BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.MNUP_YEAR_FF  SSA_BENE
                    ON TRIM(BENE.BENE_HIC_NUM) =  TRIM(SSA_BENE.BENE_HIC_NUM)
                    AND BENE.BENE_BRTH_DT      =  SSA_BENE.BENE_BRTH_DT
                    WHERE BENE.BENE_DISP_CD    = 'A' 

                )

                ,SSA_MNUP_CLM_MATCH as (

                    SELECT DISTINCT BENE.BENE_SK, TRIM(BENE.BENE_HIC_NUM) as BENE_HIC_NUM
                    FROM SSA_MNUP_BENE_MATCH  BENE
                    INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM  C
                    ON  BENE.BENE_SK        =  C.BENE_SK
                    AND C.CLM_FROM_DT BETWEEN dateadd(year, -3, CURRENT_DATE) AND CURRENT_DATE 
                    AND C.CLM_FINL_ACTN_IND = 'Y'

                )


                SELECT DISTINCT

                    RPAD(SSA_BENE.BENE_HIC_NUM,11,' ')   AS BENE_HICN

                    ,case when bene.bene_sk is null then 'N' else 'Y' end 
                     as bene_match
                    ,case when clm.bene_sk is null then 'N' else 'Y' end 
                     as Medicare_Usedin_Last3YRS

                    ,case when BD.BENE_SK is null then 'N' else 'Y' end 
                     as HMO_IND  /* MCO_IND OR HMO_IND */
                    ,case when BDS.BENE_SK is null then 'N' else 'Y' end 
                     AS IN_Nursinghome 
                    ,case when BPR.BENE_SK is null then 'N' else 'Y' end  
                     AS  Private_Health_Insurance

                    ,CASE when BCC.BENE_VA_CVRG_SW IS NULL 
                          THEN 'N' 
                          WHEN BCC.BENE_VA_CVRG_SW = '1'
                          THEN 'Y'
                          ELSE 'N' end  
                     AS VA_Switch

                    ,CASE WHEN BCC.BENE_TRICR_CVRG_SW IS NULL 
                          THEN 'N' 
                          WHEN BCC.BENE_TRICR_CVRG_SW = '1'
                          THEN 'Y'
                          ELSE 'N' end  
                     AS TRICARE_Switch
                    ,REPEAT(' ',12) as FILLER 
                 

                /* Table which contains the finder file data from SSA */
                FROM BIA_{ENVNAME}.CMS_TARGET_XTR_{ENVNAME}.MNUP_YEAR_FF SSA_BENE

                /* this table contains the BENE's matched from the finder file against*/
                /* BENE table in IDR */
                LEFT OUTER JOIN SSA_MNUP_BENE_MATCH  BENE
                ON BENE.BENE_HIC_NUM = SSA_BENE.BENE_HIC_NUM

                /* this table contains the BENE's matched from the BENE table in IDR*/
                /* WHO have claims within the last 3 years*/
                LEFT OUTER JOIN SSA_MNUP_CLM_MATCH  CLM
                ON CLM.BENE_HIC_NUM = SSA_BENE.BENE_HIC_NUM

                /* This join for the Bene coverage HMO OR Managed care Indicator */
                LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_FCT_BENE_MTRLZD_{ENVNAME}.BENE_DNMTR BD
                on BD.BENE_SK = bene.BENE_SK
                and BD.BENE_HIC_NUM = SSA_BENE.BENE_HIC_NUM
                and BD.BENE_DNMTR_CY_NUM  = {MNUP_YR}
                and BD.BENE_DNMTR_MO_NUM  = 12
                and BD.BENE_HMO_CVRG_IND  <> '0'

                /* This join for the Bene Nursing Home Indicator */
                LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE_DUAL_STUS BDS
                on BDS.BENE_SK             = BENE.BENE_SK
                and BDS.IDR_LTST_TRANS_FLG = 'Y'
                and BDS.BENE_DUAL_INSTNL_STUS_IND_SW = 'Y'

                /* This join for the Bene Private health Indicator */
                LEFT OUTER JOIN  IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE_MI_PRFL  BPR
                ON BENE.BENE_SK  = BPR.BENE_SK
                --and BPR.BENE_AUDT_SQNC_NUM=0
                and BPR.BENE_MDCL_CVRG_TYPE_CD = 'S'


                /* This join for the Bene VA coverage Indicator */
                /* This join for the Bene TRICARE coverage Indicator */
                LEFT OUTER JOIN BIA_{ENVNAME}.CMS_DIM_BEPSD_{ENVNAME}.BENE_CRDTBL_CVRG BCC
                ON BCC.BENE_LINK_KEY = BENE.BENE_SK
                And BCC.CLNDR_CY_NUM = {MNUP_YR}

                ORDER BY BENE_HICN

            

 )
                        FILE_FORMAT = (TYPE = CSV field_delimiter = none  ESCAPE_UNENCLOSED_FIELD=NONE FIELD_OPTIONALLY_ENCLOSED_BY = none )
                        SINGLE = TRUE  max_file_size=5368709120  """, con, exit_on_error=True)


   
   #**************************************
   # End Application
   #**************************************    
   snowconvert_helpers.quit_application()
   
except Exception as e:
   print(e)
   
   # Let shell script know that python code failed.
   bPythonExceptionOccurred=True   
   
finally:
   if con is not None:
      con.close()

   # Let shell script know that python code failed.      
   if bPythonExceptionOccurred == True:
      sys.exit(12) 
   else:   
      snowconvert_helpers.quit_application()

