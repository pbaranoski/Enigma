#!/usr/bin/env python
########################################################################################################
# Name:  SAFENC_DME_Extract.py
# DESC:  This python script extracts data from IDRC for the SAF ENC DME extracts
#
# Created: Viren Khanna
# Modified: 06/12/2023
#
# Paul Baranoski 2023-08-04 Update SQL Amount fields formatting to display sign as +/-, and remove one significant 
#                           digit. 
# Viren Khanna   2023-08-17 Updated code for Bene Race CD 
# Paul Barnaoski 2024-02-28 Added ESCAPE=NONE.
#                           Change CLM_PTNT_LBLTY_AMT to CLM_BENE_PMT_AMT. 
#                           Geoff Chambers has pointed out that for the Carrier and DME 
#                           SAF extracts, CLM_PTNT_LBLTY_AMT column in the carrier and DME SAF source files is incorrect.  
#                           He noticed that that field is always $0 in the 2021 carrier and DME SAF data, so he checked 
#                           the IDR’s source to target mapping document for the encounter data.   
#                           According to the IDR’s doc, they populate a variable called CLM_BENE_PMT_AMT for the part B claim types,
#                           and CLM_PTNT_LBLTY_AMT for the part A claim types – both of those variables are populated from the EDPS 
#                           raw variable CLM_AMOUNT_VALUE.   
# Viren Khanna   2024-06-07 Updated code to add 4 fields CLM_ENCTR_ADJSTMT_RSN_CD ,CLM_ENCTR_ADJSTMT_GRP_CD,CLM_ADJSTMT_GRP_CD,CLM_ADJSTMT_RSN_CD
#                           SAF extracts, CLM_LINE_DGNS_CD column in the carrier and DME SAF source files is incorrect. Fixed that by bringing CLM_LINE_DGNS_CD from 
#                           CLM_LINE_ENCTR_DGNS table instead of CLM_LINE Table
# Paul Baranoski 2024-06-25 Unnecessary change to trigger GitHub.
# Viren Khanna   2024-10-08 Updated code to remove join condition causing duplicates
########################################################################################################
# IMPORTS
########################################################################################################
import os
import sys
import datetime
from datetime import datetime


currentDirectory = os.path.dirname(os.path.realpath(__file__))
rootDirectory = os.path.abspath(os.path.join(currentDirectory, ".."))
utilDirectory = os.getenv('CMN_UTIL')

sys.path.append(rootDirectory)
sys.path.append(utilDirectory)

import snowconvert_helpers
from snowconvert_helpers import Export

########################################################################################################
# VARIABLE ASSIGNMENT
########################################################################################################
script_name = os.path.basename(__file__)
con = None 
now = datetime.now()
date_time = now.strftime("%m/%d/%Y, %H:%M:%S")

EXT_FROM_DT= os.getenv('EXT_FROM_DT')
EXT_TO_DT = os.getenv('EXT_TO_DT')
YYYY = os.getenv('YYYY')
ENVNAME = os.getenv('ENVNAME')
TMSTMP = os.getenv('TMSTMP')
RNG_LIT = os.getenv('RNG_LIT')
STUS_LIT= os.getenv('STUS_LIT')
DATADIR = os.getenv('DATADIR')

# boolean - Python Exception status
bPythonExceptionOccurred=False

########################################################################################################
# RUN
########################################################################################################
print('')
print("Run date and time: " + date_time  )
print('')


 
########################################################################################################
# Execute extract based on parameters set in the RUN section at the bottom of the script
########################################################################################################

try:
   snowconvert_helpers.configure_log()
   con = snowconvert_helpers.log_on()   
   snowconvert_helpers.execute_sql_statement(f"alter session set query_tag='{script_name}'",con,exit_on_error = True)
   snowconvert_helpers.execute_sql_statement("""USE WAREHOUSE ${sf_xtr_warehouse}  """, con,exit_on_error = True)

#**************************************
   #   Extract Part D claim data  
   #**************************************  
   # P#IDR.XTR.ENC.SAF.EARLY.DME.Y2022.Q1
   # SAF_ENC_EARLY_DME_Y2022_Q1.txt.gz  
        ########################################################################################################
        # Extract SAF ENC DME data and write to S3 as a flat file
        ########################################################################################################
   snowconvert_helpers.execute_sql_statement(f"""COPY INTO @BIA_{ENVNAME}.CMS_STAGE_XTR_{ENVNAME}.BIA_{ENVNAME}_XTR_SAFENCDME_STG/SAFENC_DME_{STUS_LIT}_{RNG_LIT}_{TMSTMP}.txt.gz
                FROM (
   WITH TMP_DME_ADR AS (

   SELECT
		 C.GEO_BENE_SK
		,C.CLM_DT_SGNTR_SK
		,C.CLM_TYPE_CD
		,C.CLM_NUM_SK

		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD = 'P' AND CA.CLM_ADR_SBTYP_CD = 'BP' 
				  THEN CA.CLM_ADR_LINE_1_TXT ELSE NULL END)          AS CLM_BPRVDR_ADR_LINE_1_TXT
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'P' AND CA.CLM_ADR_SBTYP_CD = 'BP'  
						   THEN CA.CLM_ADR_LINE_2_TXT ELSE NULL END) AS CLM_BPRVDR_ADR_LINE_2_TXT
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD = 'P' AND CA.CLM_ADR_SBTYP_CD = 'BP'   
						   THEN CA.CLM_ADR_LINE_3_TXT ELSE NULL END) AS CLM_BPRVDR_ADR_LINE_3_TXT
						   
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'P' AND CA.CLM_ADR_SBTYP_CD = 'BP'   
						   THEN CA.CLM_CITY_NAME ELSE NULL END)      AS CLM_BPRVDR_CITY_NAME
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'P' AND CA.CLM_ADR_SBTYP_CD = 'BP'   
						   THEN	CA.CLM_USPS_STATE_CD ELSE NULL END)  AS CLM_BPRVDR_USPS_STATE_CD
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'P' AND CA.CLM_ADR_SBTYP_CD = 'BP'   
						   THEN CA.GEO_ZIP5_CD ELSE NULL END)        AS BPRVDR_GEO_ZIP5_CD
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'P' AND CA.CLM_ADR_SBTYP_CD = 'BP'   
						   THEN REPLACE(CA.GEO_ZIP4_CD,'~',' ') ELSE NULL END)    AS BPRVDR_GEO_ZIP4_CD

		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'B' AND CA.CLM_ADR_SBTYP_CD = 'SB'   
						   THEN CA.CLM_ADR_LINE_1_TXT ELSE NULL END)  AS CLM_SUBSCR_ADR_LINE_1_TXT
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'B' AND CA.CLM_ADR_SBTYP_CD = 'SB'   
						   THEN CA.CLM_ADR_LINE_2_TXT ELSE NULL END)  AS CLM_SUBSCR_ADR_LINE_2_TXT
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'B' AND CA.CLM_ADR_SBTYP_CD = 'SB'    
						   THEN CA.CLM_ADR_LINE_3_TXT ELSE NULL END)  AS CLM_SUBSCR_ADR_LINE_3_TXT
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'B' AND CA.CLM_ADR_SBTYP_CD = 'SB'   
						   THEN CA.CLM_CITY_NAME ELSE NULL END)       AS CLM_SUBSCR_CITY_NAME
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'B' AND CA.CLM_ADR_SBTYP_CD = 'SB'   
						   THEN CA.CLM_USPS_STATE_CD ELSE NULL END)   AS CLM_SUBSCR_USPS_STATE_CD
						   
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'B' AND CA.CLM_ADR_SBTYP_CD = 'SB'   
						   THEN CA.GEO_ZIP5_CD ELSE NULL END)         AS SUBSCR_GEO_ZIP5_CD
		,MAX(CASE WHEN CA.CLM_ADR_TYPE_CD =  'B' AND CA.CLM_ADR_SBTYP_CD = 'SB'   
						   THEN REPLACE(CA.GEO_ZIP4_CD,'~',' ') ELSE NULL END)         AS SUBSCR_GEO_ZIP4_CD

        FROM IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM C                             

	INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_ADR CA
	ON  C.GEO_BENE_SK     = CA.GEO_BENE_SK
	AND C.CLM_DT_SGNTR_SK = CA.CLM_DT_SGNTR_SK
	AND C.CLM_TYPE_CD     = CA.CLM_TYPE_CD
	AND C.CLM_NUM_SK      = CA.CLM_NUM_SK
	AND CA.CLM_ADR_SQNC_NUM = 1         
                       
        INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_ENCTR CE                                   
        ON  C.GEO_BENE_SK = CE.GEO_BENE_SK                                           
        AND C.CLM_DT_SGNTR_SK = CE.CLM_DT_SGNTR_SK                                   
        AND C.CLM_TYPE_CD = CE.CLM_TYPE_CD                                           
        AND C.CLM_NUM_SK = CE.CLM_NUM_SK                                             
                                                                              
        INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_ENCTR CLE                             
        ON  C.GEO_BENE_SK     = CLE.GEO_BENE_SK                                      
        AND C.CLM_DT_SGNTR_SK = CLE.CLM_DT_SGNTR_SK                                  
        AND C.CLM_TYPE_CD     = CLE.CLM_TYPE_CD                                      
        AND C.CLM_NUM_SK      = CLE.CLM_NUM_SK                                       
                                                                              
        WHERE C.CLM_TYPE_CD  = '4800'                                                
        --and C.CLM_FINL_ACTN_IND = 'Y'                                              
        AND CE.CLM_EDPS_STUS_CD = 'A'               
        AND CLE.CLM_LINE_ENCTR_STUS_CD <> '84'                                
        AND C.CLM_THRU_DT BETWEEN to_date('{EXT_FROM_DT}','YYYY-MM-DD') AND to_date('{EXT_TO_DT}','YYYY-MM-DD')
        GROUP BY C.GEO_BENE_SK, C.CLM_DT_SGNTR_SK, C.CLM_TYPE_CD, C.CLM_NUM_SK  
	 

)

           

SELECT DISTINCT

	 TO_CHAR(CL.GEO_BENE_SK,'FM0000000000')        AS GEO_BENE_SK
	,TO_CHAR(CL.CLM_DT_SGNTR_SK,'FM0000000000000') AS CLM_DT_SGNTR_SK
	,TO_CHAR(CL.CLM_TYPE_CD,'FM00000')             AS CLM_TYPE_CD
	,TO_CHAR(CL.CLM_NUM_SK,'FM00000')              AS CLM_NUM_SK
	,TO_CHAR(CL.CLM_LINE_NUM,'FM0000000000')       AS CLM_LINE_NUM 
	,TO_CHAR(CL.CLM_TYPE_CD,'FM00000')             AS CLM_TYPE_CD  

-- FOLLOWING COLUMN  IS CHANGED IN 2015 RUN 06/17
/*C.CLM_HIC_NUM (CHAR(20)), */
,SUBSTR(RPAD(COALESCE(TRIM(C.CLM_HIC_NUM),' '),12,' '),1,12)  AS CLM_HIC_NUM
,RPAD((CASE WHEN GFCC.GEO_SSA_STATE_CD = '~' THEN ' ' ELSE GFCC.GEO_SSA_STATE_CD END),2,' ')  AS GEO_SSA_STATE_CD
,CASE WHEN C.CLM_FROM_DT IS NULL THEN REPEAT(8,' ') ELSE to_char(C.CLM_FROM_DT,'YYYYMMDD') END AS CLM_FROM_DT
,CASE WHEN C.CLM_THRU_DT IS NULL THEN REPEAT(8,' ') ELSE to_char(C.CLM_THRU_DT,'YYYYMMDD') END AS CLM_THRU_DT
,CASE WHEN CED.CLM_EDPS_CREATN_DT IS NULL THEN REPEAT(8,' ') ELSE to_char(CED.CLM_EDPS_CREATN_DT,'YYYYMMDD') END AS CLM_EDPS_CREATN_DT
,RPAD(C.CLM_CNTL_NUM,40,' ') AS  CLM_CNTL_NUM
,CASE WHEN CED.CLM_EDPS_LD_DT IS NULL THEN REPEAT(8,' ') ELSE to_char(CED.CLM_EDPS_LD_DT,'YYYYMMDD') END AS CLM_EDPS_LD_DT
,RPAD(CASE WHEN TRIM(CE.CLM_CNTRCT_NUM) = '~'       THEN ' ' ELSE COALESCE(CE.CLM_CNTRCT_NUM,' ') END,5,' ')       AS CLM_CNTRCT_NUM
,RPAD(CASE WHEN TRIM(C.CLM_BILL_FREQ_CD) = '~'       THEN ' ' ELSE COALESCE(C.CLM_BILL_FREQ_CD,' ') END,1,' ')       AS CLM_BILL_FREQ_CD
,RPAD(CASE WHEN GFCC.GEO_SSA_CNTY_CD = '~' THEN ' ' ELSE COALESCE(GFCC.GEO_SSA_CNTY_CD,' ') END,3,' ')  AS  GEO_SSA_CNTY_CD
,CASE WHEN DT.CLM_SUBMSN_DT IS NULL THEN REPEAT(8,' ') ELSE to_char(DT.CLM_SUBMSN_DT,'YYYYMMDD') END    AS  CLM_SUBMSN_DT
,RPAD(CASE WHEN ZIP5.GEO_ZIP5_CD ='~' THEN ' ' ELSE COALESCE(ZIP5.GEO_ZIP5_CD,' ') END,5,' ')  ||
RPAD(CASE WHEN ZIP9.GEO_ZIP4_CD ='~' THEN ' ' ELSE COALESCE(ZIP9.GEO_ZIP4_CD,' ') END,4,' ')	AS GEO_ZIP9_CD
,RPAD(CASE WHEN C.BENE_SEX_CD   = '~' THEN ' '  ELSE C.BENE_SEX_CD END,1,' ')   AS BENE_SEX_CD 
,RPAD(CASE WHEN COALESCE(BF.BENE_RACE_CD,' ') = '~' THEN ' '  ELSE COALESCE(BF.BENE_RACE_CD,' ') END,2,' ') AS BENE_RACE_CD
,CASE WHEN C.CLM_PTNT_BIRTH_DT IS NULL THEN REPEAT(8,' ') ELSE to_char(C.CLM_PTNT_BIRTH_DT,'YYYYMMDD') END  AS  CLM_PTNT_BIRTH_DT
,RPAD(COALESCE(BF.BENE_MDCR_STUS_CD,' '),2,' ')   AS BENE_MDCR_STUS_CD
,RPAD(CDN.CLM_LAST_NAME,60,' ')     AS CLM_LAST_NAME
,RPAD(CDN.CLM_1ST_NAME,35,' ')      AS CLM_1ST_NAME
,RPAD(COALESCE(CDN.CLM_INTL_MDL_NAME,' '),1,' ') AS CLM_INTL_MDL_NAME
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_PRCDR_ICD_IND = '~' THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_PRCDR_ICD_IND,' ') END,1,' ') AS CLM_DGNS_PRCDR_ICD_IND
,RPAD(CASE WHEN PROD_MT.CLM_PRNCPL_DGNS_CD = '~'     THEN ' ' ELSE COALESCE(PROD_MT.CLM_PRNCPL_DGNS_CD,' ') END,7,' ')     AS CLM_PRNCPL_DGNS_CD
,RPAD(CASE WHEN C.CLM_RFRG_PRVDR_UPIN_NUM = '~'      THEN ' ' ELSE COALESCE(C.CLM_RFRG_PRVDR_UPIN_NUM,' ')     END,6,' ')  AS  CLM_RFRG_PRVDR_UPIN_NUM 
,RPAD(CASE WHEN C.CLM_RFRG_PRVDR_NPI_NUM = '~'      THEN ' ' ELSE COALESCE(C.CLM_RFRG_PRVDR_NPI_NUM,' ')     END,10,' ')  AS  CLM_RFRG_PRVDR_NPI_NUM
,REPLACE(TO_CHAR(COALESCE(CEOPD.CLM_ENCTR_OTHR_PYR_PD_AMT,0),'000000000000.00S'),'.','')    AS CLM_ENCTR_OTHR_PYR_PD_AMT                             
,REPLACE(TO_CHAR(COALESCE(C.CLM_SBMT_CHRG_AMT,0),'000000000000.00S'),'.','')  AS CLM_SBMT_CHRG_AMT 
,RPAD(CASE WHEN C.CLM_DCMTN_CD = '~' THEN ' '  ELSE COALESCE (C.CLM_DCMTN_CD,' ') END,2,' ') AS CLM_DCMTN_CD 
,TO_CHAR(PROD_MT.CLM_DGNS_TOT_OCRNC_CNT,'FM00')   AS CLM_DGNS_TOT_OCRNC_CNT
,RPAD(CASE WHEN CDN.CLM_MCO_1ST_CNTRCT_NUM = '~'   THEN ' ' ELSE COALESCE(CDN.CLM_MCO_1ST_CNTRCT_NUM,' ') END,5,' ')    AS CLM_MCO_1ST_CNTRCT_NUM
,RPAD(CASE WHEN CDN.CLM_MCO_2ND_CNTRCT_NUM = '~'   THEN ' ' ELSE COALESCE(CDN.CLM_MCO_2ND_CNTRCT_NUM,' ') END,5,' ')    AS CLM_MCO_2ND_CNTRCT_NUM
,RPAD(CASE WHEN CDN.CLM_MCO_1ST_HLTH_PLAN_ID = '~' THEN ' ' ELSE COALESCE(CDN.CLM_MCO_1ST_HLTH_PLAN_ID,' ') END,14,' ') AS CLM_MCO_1ST_HLTH_PLAN_ID
,RPAD(CASE WHEN CDN.CLM_MCO_2ND_HLTH_PLAN_ID = '~' THEN ' ' ELSE COALESCE(CDN.CLM_MCO_2ND_HLTH_PLAN_ID,' ') END,14,' ') AS CLM_MCO_2ND_HLTH_PLAN_ID
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_PRCDR_ICD_IND = '~' THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_PRCDR_ICD_IND,' ') END,1,' ') AS CLM_DGNS_PRCDR_ICD_IND
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_1_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_1_CD,' ')  END,7,' ')  AS CLM_DGNS_1_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_2_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_2_CD,' ')  END,7,' ')  AS CLM_DGNS_2_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_3_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_3_CD,' ')  END,7,' ')  AS CLM_DGNS_3_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_4_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_4_CD,' ')  END,7,' ')  AS CLM_DGNS_4_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_5_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_5_CD,' ')  END,7,' ')  AS CLM_DGNS_5_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_6_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_6_CD,' ')  END,7,' ')  AS CLM_DGNS_6_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_7_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_7_CD,' ')  END,7,' ')  AS CLM_DGNS_7_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_8_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_8_CD,' ')  END,7,' ')  AS CLM_DGNS_8_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_9_CD = '~'  THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_9_CD,' ')  END,7,' ')  AS CLM_DGNS_9_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_10_CD = '~' THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_10_CD,' ') END,7,' ')  AS CLM_DGNS_10_CD	
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_11_CD = '~' THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_11_CD,' ') END,7,' ')  AS CLM_DGNS_11_CD
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_12_CD = '~' THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_12_CD,' ') END,7,' ')  AS CLM_DGNS_12_CD
,RPAD(CASE WHEN PROD_MT.CLM_DGNS_13_CD = '~' THEN ' ' ELSE COALESCE(PROD_MT.CLM_DGNS_13_CD,' ') END,7,' ')  AS CLM_DGNS_13_CD
,RPAD(CASE WHEN CL.CLM_RNDRG_PRVDR_NSC_NUM = '~'      THEN ' ' ELSE COALESCE(CL.CLM_RNDRG_PRVDR_NSC_NUM,' ')     END,10,' ')  AS  CLM_RNDRG_PRVDR_NSC_NUM
,RPAD(CASE WHEN CL.CLM_RNDRG_PRVDR_NPI_NUM = '~' THEN ' ' ELSE COALESCE(CL.CLM_RNDRG_PRVDR_NPI_NUM,' ') END,10,' ')  AS CLM_RNDRG_PRVDR_NPI_NUM
,RPAD(CASE WHEN CL.GEO_RNDRG_SSA_STATE_CD = '~' THEN ' ' ELSE COALESCE(CL.GEO_RNDRG_SSA_STATE_CD,' ') END,2,' ')  AS GEO_RNDRG_SSA_STATE_CD
,RPAD(CASE WHEN ZIP5.GEO_ZIP5_CD ='~' THEN ' ' ELSE COALESCE(ZIP5.GEO_ZIP5_CD,' ') END,5,' ')  ||
RPAD(CASE WHEN ZIP9.GEO_ZIP4_CD ='~' THEN ' ' ELSE COALESCE(ZIP9.GEO_ZIP4_CD,' ') END,4,' ')	AS GEO_ZIP9_CD
,RPAD(CASE WHEN CL.GEO_RNDRG_SSA_STATE_CD = '~' THEN ' ' ELSE COALESCE(CL.GEO_RNDRG_SSA_STATE_CD,' ') END,2,' ')  AS GEO_RNDRG_SSA_STATE_CD
,RPAD(CASE WHEN CL.CLM_RNDRG_PRVDR_TAX_NUM = '~' THEN ' ' ELSE COALESCE(CL.CLM_RNDRG_PRVDR_TAX_NUM,' ') END,10,' ')  AS CLM_RNDRG_PRVDR_TAX_NUM
,RPAD(CASE WHEN CL.CLM_RNDRG_FED_PRVDR_SPCLTY_CD = '~' THEN ' ' ELSE COALESCE(CL.CLM_RNDRG_FED_PRVDR_SPCLTY_CD,' ') END,2,' ') AS CLM_RNDRG_FED_PRVDR_SPCLTY_CD
,RPAD(CASE WHEN CL.CLM_RNDRG_PRVDR_PRTCPTG_CD = '~' THEN ' ' ELSE COALESCE(CL.CLM_RNDRG_PRVDR_PRTCPTG_CD,' ') END,1,' ') AS CLM_RNDRG_PRVDR_PRTCPTG_CD
,REPLACE(TO_CHAR(COALESCE(CL.CLM_LINE_SRVC_UNIT_QTY,0),'0000000000000.0000S'),'.','')  AS CLM_LINE_SRVC_UNIT_QTY
,RPAD(CASE WHEN CLE.IDR_CLM_POS_CD = '~' THEN ' ' ELSE COALESCE(CLE.IDR_CLM_POS_CD,' ') END,2,' ') AS IDR_CLM_POS_CD
,CASE WHEN CL.CLM_LINE_FROM_DT IS NULL THEN REPEAT(8,' ') ELSE TO_CHAR(CL.CLM_LINE_FROM_DT,'YYYYMMDD') END  AS  CLM_LINE_FROM_DT
,CASE WHEN CL.CLM_LINE_THRU_DT IS NULL THEN REPEAT(8,' ') ELSE TO_CHAR(CL.CLM_LINE_THRU_DT,'YYYYMMDD') END  AS  CLM_LINE_THRU_DT
,CASE WHEN CL.CLM_LINE_HCPCS_CD = '~' THEN ' ' ELSE COALESCE(CL.CLM_LINE_HCPCS_CD,' ')  END AS CLM_LINE_HCPCS_CD
	
,RPAD(CASE WHEN CL.HCPCS_1_MDFR_CD = '~'   THEN ' ' ELSE COALESCE(CL.HCPCS_1_MDFR_CD,' ')	END,2,' ') AS HCPCS_1_MDFR_CD	
,RPAD(CASE WHEN CL.HCPCS_2_MDFR_CD = '~'   THEN ' ' ELSE COALESCE(CL.HCPCS_2_MDFR_CD,' ')	END,2,' ') AS HCPCS_2_MDFR_CD
,RPAD(CASE WHEN CL.HCPCS_3_MDFR_CD = '~'   THEN ' ' ELSE COALESCE(CL.HCPCS_3_MDFR_CD,' ')	END,2,' ') AS HCPCS_3_MDFR_CD
,RPAD(CASE WHEN CL.HCPCS_4_MDFR_CD = '~'   THEN ' ' ELSE COALESCE(CL.HCPCS_4_MDFR_CD,' ')	END,2,' ') AS HCPCS_4_MDFR_CD
,RPAD(CASE WHEN CL.CLM_LINE_NDC_CD ='~' THEN ' ' ELSE CL.CLM_LINE_NDC_CD END,11,' ')  AS CLM_LINE_NDC_CD
,REPLACE(TO_CHAR(COALESCE(CLEOPD.CLM_LINE_OTHR_PYR_PD_AMT,0),'000000000000.00S'),'.','')  AS CLM_LINE_OTHR_PYR_PD_AMT
,REPLACE(TO_CHAR(COALESCE(CL.CLM_LINE_SBMT_CHRG_AMT,0),'000000000000.00S'),'.','') AS CLM_LINE_SBMT_CHRG_AMT 
,RPAD(CASE WHEN CLEDD.CLM_LINE_DGNS_CD = '~'   THEN ' ' ELSE COALESCE(CLEDD.CLM_LINE_DGNS_CD,' ')	END,11,' ') AS CLM_LINE_DGNS_CD
,RPAD(CASE WHEN CL.CLM_LINE_DCMTN_CD ='~' THEN ' ' ELSE COALESCE(CL.CLM_LINE_DCMTN_CD,' ') END,2,' ')  AS CLM_LINE_DCMTN_CD
,RPAD(CASE WHEN C.CLM_SBMTR_CNTRCT_NUM = BF.CNTRCT_PTC_NUM THEN BF.CNTRCT_PBP_PTC_NUM ELSE ' ' END,3,' ')  AS CNTRCT_PBP_PTC_NUM
,RPAD(CASE WHEN CED.CLM_CNTRCT_TYPE_CD = '~' THEN ' ' ELSE COALESCE(CED.CLM_CNTRCT_TYPE_CD,' ') END,2,' ') AS CLM_CNTRCT_TYPE_CD
,RPAD(CASE WHEN CLED.CLM_LINE_CNTRCT_TYPE_CD = '~' THEN ' ' ELSE COALESCE(CLED.CLM_LINE_CNTRCT_TYPE_CD,' ') END,2,' ')  AS CLM_LINE_CNTRCT_TYPE_CD
,CASE WHEN CED.CLM_CHRT_RVW_SW = '~' THEN ' ' ELSE COALESCE(CED.CLM_CHRT_RVW_SW,' ') END AS CLM_CHRT_RVW_SW 
,TO_CHAR(BENE.BENE_SK,'FM000000000000000000')  AS BENE_SK
,RPAD(C.CLM_FINL_ACTN_IND,1,' ') AS CLM_FINL_ACTN_IND
,RPAD(CL.CLM_LINE_FINL_ACTN_IND,1,' ') AS CLM_LINE_FINL_ACTN_IND
,RPAD(C.CLM_LTST_CLM_IND,1,' ') AS CLM_LTST_CLM_IND
		
,RPAD(CL.CLM_LINE_LTST_CLM_IND,1,' ') AS CLM_LINE_LTST_CLM_IND
,RPAD(CLE.CLM_LINE_ENCTR_STUS_CD,20,' ') AS CLM_LINE_ENCTR_STUS_CD
,RPAD(COALESCE(C.CLM_ORIG_CNTL_NUM,' ') ,40,' ') AS CLM_ORIG_CNTL_NUM 
,RPAD(COALESCE(CDN.CLM_PTNT_MDCL_REC_NUM,' '),80,' ')  AS CLM_PTNT_MDCL_REC_NUM
,RPAD(CASE WHEN C.CLM_BLG_PRVDR_NPI_NUM = '~'      THEN ' ' ELSE COALESCE(C.CLM_BLG_PRVDR_NPI_NUM,' ')     END,10,' ')  AS  CLM_BLG_PRVDR_NPI_NUM 
,RPAD(CASE WHEN C.CLM_BLG_PRVDR_TXNMY_CD = '~' THEN ' ' ELSE COALESCE(C.CLM_BLG_PRVDR_TXNMY_CD,' ') END,50,' ') AS CLM_BLG_PRVDR_TXNMY_CD
,RPAD(CASE WHEN C.CLM_ATNDG_PRVDR_TXNMY_CD ='~' THEN ' ' ELSE COALESCE(C.CLM_ATNDG_PRVDR_TXNMY_CD,' ') END,10,' ') AS CLM_ATNDG_PRVDR_TXNMY_CD
,RPAD(CE.CLM_EDPS_STUS_CD,20,' ')
,CASE WHEN C.CLM_OBSLT_DT IS NULL THEN REPEAT(8,' ') ELSE TO_CHAR(C.CLM_OBSLT_DT,'YYYYMMDD') END  AS  CLM_OBSLT_DT
,TO_CHAR(C.CLM_ERR_SGNTR_SK,'FM000000000000000000') AS CLM_ERR_SGNTR_SK  
,TO_CHAR(C.GEO_BENE_EFCTV_SK,'FM0000000000')        AS GEO_BENE_EFCTV_SK
,TO_CHAR(C.CLM_DT_SGNTR_EFCTV_SK,'FM0000000000000')  AS  CLM_DT_SGNTR_EFCTV_SK  
,TO_CHAR(C.CLM_TYPE_EFCTV_CD,'FM00000')  AS  CLM_TYPE_EFCTV_CD
,TO_CHAR(C.CLM_NUM_EFCTV_SK,'FM00000') AS CLM_NUM_EFCTV_SK
,REPLACE(TO_CHAR(COALESCE(CED.CLM_CNTRCT_AMT,0),'000000000000.00S'),'.','')  AS  CLM_CNTRCT_AMT
,REPLACE(TO_CHAR(COALESCE(C.CLM_BENE_PMT_AMT,0),'000000000000.00S'),'.','')  AS  CLM_BENE_PMT_AMT
,RPAD(CASE WHEN BENE.BENE_EQTBL_BIC_CD = '~' THEN ' ' ELSE COALESCE(BENE.BENE_EQTBL_BIC_CD,' ') END,2,' ')  AS  BENE_EQTBL_BIC_CD
,RPAD(COALESCE(ADRTEMP.CLM_BPRVDR_ADR_LINE_1_TXT,' '),55,' ')  AS CLM_BPRVDR_ADR_LINE_1_TXT
,RPAD(COALESCE(ADRTEMP.CLM_BPRVDR_ADR_LINE_2_TXT,' '),55,' ')  AS CLM_BPRVDR_ADR_LINE_2_TXT
,RPAD(COALESCE(ADRTEMP.CLM_BPRVDR_ADR_LINE_3_TXT,' '),55,' ')  AS CLM_BPRVDR_ADR_LINE_3_TXT
,RPAD(COALESCE(ADRTEMP.CLM_BPRVDR_CITY_NAME,' '),30,' ')       AS CLM_BPRVDR_CITY_NAME
,RPAD(COALESCE(ADRTEMP.CLM_BPRVDR_USPS_STATE_CD,' '),2,' ')    AS CLM_BPRVDR_USPS_STATE_CD
,RPAD(COALESCE(ADRTEMP.BPRVDR_GEO_ZIP5_CD,' '),5,' ') || 
RPAD(COALESCE(ADRTEMP.BPRVDR_GEO_ZIP4_CD,' '),4,' ')          AS ADR_BPRVDR_ZIP_CD 
,RPAD(COALESCE(ADRTEMP.CLM_SUBSCR_ADR_LINE_1_TXT,' '),55,' ')  AS CLM_SUBSCR_ADR_LINE_1_TXT
,RPAD(COALESCE(ADRTEMP.CLM_SUBSCR_ADR_LINE_2_TXT,' '),55,' ')  AS CLM_SUBSCR_ADR_LINE_2_TXT
,RPAD(COALESCE(ADRTEMP.CLM_SUBSCR_ADR_LINE_3_TXT,' '),55,' ')  AS CLM_SUBSCR_ADR_LINE_3_TXT
,RPAD(COALESCE(ADRTEMP.CLM_SUBSCR_CITY_NAME,' '),30,' ')       AS CLM_SUBSCR_CITY_NAME
,RPAD(COALESCE(ADRTEMP.CLM_SUBSCR_USPS_STATE_CD,' '),2,' ')    AS CLM_SUBSCR_USPS_STATE_CD
,RPAD(COALESCE(ADRTEMP.SUBSCR_GEO_ZIP5_CD,' '),5,' ') || 
RPAD(COALESCE(ADRTEMP.SUBSCR_GEO_ZIP4_CD,' '),4,' ')          AS ADR_SUBSCR_ZIP_CD 
,RPAD(CASE WHEN C.CLM_BLG_PRVDR_TAX_NUM ='~' THEN ' ' ELSE COALESCE(C.CLM_BLG_PRVDR_TAX_NUM,' ') END,10,' ') AS CLM_BLG_PRVDR_TAX_NUM
,RPAD(C.BENE_ID_TYPE_CD,1,' ')  AS BENE_ID_TYPE_CD
,RPAD(COALESCE(BENE.BENE_MBI_ID,' '),11,' ')  AS CLM_BENE_MBI_ID
,RPAD(COALESCE(CED.CLM_CHRT_RVW_EFCTV_SW,' '),1,' ')  AS CLM_CHRT_RVW_EFCTV_SW
,RPAD(COALESCE(CED.CLM_EDPS_CHRT_RVW_SW,' '),1,' ')   AS CLM_EDPS_CHRT_RVW_SW	
,RPAD(CASE WHEN CE.CLM_POS_CD = '~' THEN ' ' ELSE COALESCE(CE.CLM_POS_CD,' ') END,2,' ') AS CLM_POS_CD
		
,RPAD(CASE WHEN C.CLM_RNDRG_PRVDR_NPI_NUM = '~' THEN ' ' ELSE COALESCE(C.CLM_RNDRG_PRVDR_NPI_NUM,' ') END,10,' ')  AS CLM_RNDRG_PRVDR_NPI_NUM
,RPAD(CASE WHEN CEOPP.CLM_ENCTR_ADJSTMT_RSN_CD = '~' THEN ' '  ELSE COALESCE (CEOPP.CLM_ENCTR_ADJSTMT_RSN_CD,' ') END,3,' ')AS CLM_ENCTR_ADJSTMT_RSN_CD
,RPAD(CASE WHEN CEOPP.CLM_ENCTR_ADJSTMT_GRP_CD = '~' THEN ' '  ELSE COALESCE (CEOPP.CLM_ENCTR_ADJSTMT_GRP_CD,' ') END,2,' ')AS CLM_ENCTR_ADJSTMT_GRP_CD
,RPAD(CASE WHEN CLEOPP.CLM_ADJSTMT_RSN_CD ='~' THEN ' ' ELSE COALESCE(CLEOPP.CLM_ADJSTMT_RSN_CD,' ') END,3,' ')  AS CLM_ADJSTMT_RSN_CD
,RPAD(CASE WHEN CLEOPP.CLM_ADJSTMT_GRP_CD ='~' THEN ' ' ELSE COALESCE(CLEOPP.CLM_ADJSTMT_GRP_CD,' ') END,2,' ')  AS CLM_ADJSTMT_GRP_CD
,'END' AS END_OF_FILE





FROM IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM C

INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_DT_SGNTR DT
  ON  DT.CLM_DT_SGNTR_SK = C.CLM_DT_SGNTR_SK

INNER JOIN IDRC_{ENVNAME}.CMS_DIM_BENE_{ENVNAME}.BENE BENE
 ON C.BENE_SK     = BENE.BENE_SK
--AND BENE.BENE_SRC_DLT_IND = 'N'

INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE CL
 ON C.GEO_BENE_SK     = CL.GEO_BENE_SK
AND C.CLM_DT_SGNTR_SK = CL.CLM_DT_SGNTR_SK
AND C.CLM_TYPE_CD     = CL.CLM_TYPE_CD
AND C.CLM_NUM_SK      = CL.CLM_NUM_SK
AND C.CLM_FROM_DT = CL.CLM_FROM_DT

LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_FCT_BENE_MTRLZD_{ENVNAME}.BENE_FCT_TRANS BF
ON BF.BENE_SK = C.BENE_SK
AND TO_DATE(BF.IDR_TRANS_OBSLT_TS) = '9999-12-31'
AND C.CLM_FROM_DT BETWEEN BENE_FCT_EFCTV_DT AND
    CASE WHEN BF.BENE_DEATH_DT IS NOT NULL
    THEN  ADD_MONTHS(( BENE_FCT_OBSLT_DT - EXTRACT(DAY FROM BENE_FCT_OBSLT_DT) + 1),1)-1
    ELSE BENE_FCT_OBSLT_DT END


INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_DCMTN CDN
 ON C.GEO_BENE_SK = CDN.GEO_BENE_SK
AND C.CLM_DT_SGNTR_SK = CDN.CLM_DT_SGNTR_SK
AND C.CLM_TYPE_CD = CDN.CLM_TYPE_CD
AND C.CLM_NUM_SK = CDN.CLM_NUM_SK

INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_ENCTR CE
 ON C.GEO_BENE_SK     = CE.GEO_BENE_SK
AND C.CLM_DT_SGNTR_SK = CE.CLM_DT_SGNTR_SK
AND C.CLM_TYPE_CD     = CE.CLM_TYPE_CD
AND C.CLM_NUM_SK      = CE.CLM_NUM_SK

--V1_CLM_LINE_ENCTR   ADDED AS PART OF 2014 RERUN 08/16

INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_ENCTR CLE
 ON  CL.GEO_BENE_SK     = CLE.GEO_BENE_SK
AND CL.CLM_DT_SGNTR_SK = CLE.CLM_DT_SGNTR_SK
AND CL.CLM_TYPE_CD     = CLE.CLM_TYPE_CD
AND CL.CLM_NUM_SK      = CLE.CLM_NUM_SK
AND CL.CLM_LINE_NUM =  CLE.CLM_LINE_NUM

INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_ENCTR_DCMTN   CED
 ON C.GEO_BENE_SK     = CED.GEO_BENE_SK
AND C.CLM_DT_SGNTR_SK = CED.CLM_DT_SGNTR_SK
AND C.CLM_TYPE_CD     = CED.CLM_TYPE_CD
AND C.CLM_NUM_SK      = CED.CLM_NUM_SK

 -- ADDED THE LOGIC FOR 2014 EXTRACT
INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_ENCTR_DCMTN  CLED
  ON CL.GEO_BENE_SK     = CLED.GEO_BENE_SK
 AND CL.CLM_DT_SGNTR_SK = CLED.CLM_DT_SGNTR_SK
 AND CL.CLM_TYPE_CD     = CLED.CLM_TYPE_CD
 AND CL.CLM_NUM_SK      = CLED.CLM_NUM_SK
 AND CL.CLM_LINE_NUM =  CLED.CLM_LINE_NUM


LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_ENCTR_OTHR_PYR_DTL CEOPD
 ON C.GEO_BENE_SK     = CEOPD.GEO_BENE_SK
AND C.CLM_DT_SGNTR_SK = CEOPD.CLM_DT_SGNTR_SK
AND C.CLM_TYPE_CD     = CEOPD.CLM_TYPE_CD
AND C.CLM_NUM_SK      = CEOPD.CLM_NUM_SK
AND CEOPD.CLM_OTHR_PYR_RSPNSBLTY_SQNC_CD = 'P'

----Added 6/7/2024
LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_ENCTR_OTHR_PYR_PMT CEOPP
  ON C.GEO_BENE_SK = CEOPP.GEO_BENE_SK
 AND C.CLM_DT_SGNTR_SK = CEOPP.CLM_DT_SGNTR_SK
 AND C.CLM_TYPE_CD = CEOPP.CLM_TYPE_CD
 AND C.CLM_NUM_SK  = CEOPP.CLM_NUM_SK
 AND CEOPP.CLM_OTHR_PYR_PMT_SQNC_NUM = 1

LEFT OUTER JOIN   IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_ENCTR_OTHR_PYR_DTL CLEOPD
 ON CL.GEO_BENE_SK =  CLEOPD.GEO_BENE_SK
AND CL.CLM_DT_SGNTR_SK =  CLEOPD.CLM_DT_SGNTR_SK
AND CL.CLM_TYPE_CD =  CLEOPD.CLM_TYPE_CD
AND CL.CLM_NUM_SK =  CLEOPD.CLM_NUM_SK
AND CL.CLM_LINE_NUM =  CLEOPD.CLM_LINE_NUM
AND CLEOPD.CLM_LINE_OTHR_PYR_SQNC_NUM=1

---- Added 6/7/2024
LEFT OUTER JOIN  IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_ENCTR_OTHR_PYR_PMT CLEOPP
  ON CL.GEO_BENE_SK = CLEOPP.GEO_BENE_SK
 AND CL.CLM_DT_SGNTR_SK = CLEOPP.CLM_DT_SGNTR_SK
 AND CL.CLM_TYPE_CD = CLEOPP.CLM_TYPE_CD
 AND CL.CLM_NUM_SK = CLEOPP.CLM_NUM_SK
 AND CL.CLM_LINE_NUM = CLEOPP.CLM_LINE_NUM
 AND CLEOPP.CLM_LINE_OTHR_PYR_PMT_SQNC_NUM = 1

/*
LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_PROD PROD
 ON C.GEO_BENE_SK     = PROD.GEO_BENE_SK
AND C.CLM_DT_SGNTR_SK = PROD.CLM_DT_SGNTR_SK
AND C.CLM_TYPE_CD     = PROD.CLM_TYPE_CD
AND C.CLM_NUM_SK      = PROD.CLM_NUM_SK
AND PROD.CLM_PROD_TYPE_CD='D'
*/

INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_PROD_MTRLZD PROD_MT
 ON C.GEO_BENE_SK     = PROD_MT.GEO_BENE_SK
AND C.CLM_DT_SGNTR_SK = PROD_MT.CLM_DT_SGNTR_SK
AND C.CLM_TYPE_CD     = PROD_MT.CLM_TYPE_CD
AND C.CLM_NUM_SK      = PROD_MT.CLM_NUM_SK

---- Added 6/7/2024
INNER JOIN IDRC_{ENVNAME}.CMS_FCT_CLM_{ENVNAME}.CLM_LINE_ENCTR_DGNS CLEDD
ON  CL.GEO_BENE_SK     = CLEDD.GEO_BENE_SK
AND CL.CLM_DT_SGNTR_SK = CLEDD.CLM_DT_SGNTR_SK
AND CL.CLM_TYPE_CD     = CLEDD.CLM_TYPE_CD
AND CL.CLM_NUM_SK      = CLEDD.CLM_NUM_SK
AND CL.CLM_LINE_NUM =  CLEDD.CLM_LINE_NUM
AND CLEDD.CLM_LINE_DGNS_SQNC_NUM=1 

INNER JOIN IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_ZIP5_CD ZIP5
 ON ZIP5.GEO_SK = C.GEO_BENE_SK

LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_ZIP9_CD ZIP9
 ON ZIP9.GEO_SK = ZIP5.GEO_SK
--AND ZIP9.GEO_FIPS_STATE_CD= ZIP5.GEO_FIPS_STATE_CD
--AND ZIP5.GEO_FIPS_CNTY_CD = ZIP9.GEO_FIPS_CNTY_CD
AND BENE.GEO_ZIP4_CD     = ZIP9.GEO_ZIP4_CD

LEFT OUTER JOIN ( 
SELECT DISTINCT 
GCNTY.GEO_FIPS_CNTY_CD,GCNTY.GEO_FIPS_STATE_CD,GCNTY.GEO_SSA_STATE_CD,GCNTY.GEO_SSA_CNTY_CD
FROM IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_FIPS_CNTY_CD GCNTY ) GFCC
                        
ON  ZIP5.GEO_FIPS_CNTY_CD   = GFCC.GEO_FIPS_CNTY_CD
AND ZIP5.GEO_FIPS_STATE_CD  = GFCC.GEO_FIPS_STATE_CD 
             
/*
LEFT OUTER JOIN IDRC_{ENVNAME}.CMS_DIM_GEO_{ENVNAME}.GEO_FIPS_CNTY_CD GFCC
 ON GFCC.GEO_FIPS_CNTY_CD = ZIP5.GEO_FIPS_CNTY_CD
AND GFCC.GEO_FIPS_STATE_CD = ZIP5.GEO_FIPS_STATE_CD
*/

 --CMS_LOAD_COMM_PRD.MK_DME_ADR_TEMP  ADDED AS PART OF 2014 RERUN 09/16
LEFT OUTER JOIN TMP_DME_ADR ADRTEMP 
         ON      C.GEO_BENE_SK     = ADRTEMP.GEO_BENE_SK
         AND     C.CLM_DT_SGNTR_SK = ADRTEMP.CLM_DT_SGNTR_SK
         AND     C.CLM_TYPE_CD     = ADRTEMP.CLM_TYPE_CD
         AND     C.CLM_NUM_SK      = ADRTEMP.CLM_NUM_SK

WHERE CE.CLM_TYPE_CD = '4800' /* DME */
--AND CLM_FINL_ACTN_IND = 'Y'
AND CE.CLM_EDPS_STUS_CD = 'A'
AND CLE.CLM_LINE_ENCTR_STUS_CD <> '84'
AND C.CLM_THRU_DT BETWEEN to_date('{EXT_FROM_DT}','YYYY-MM-DD') AND to_date('{EXT_TO_DT}','YYYY-MM-DD')

ORDER BY 1,2,3,4,5
   
    
                
                ) 
                  FILE_FORMAT = (TYPE=CSV field_delimiter=none ESCAPE_UNENCLOSED_FIELD=NONE  FIELD_OPTIONALLY_ENCLOSED_BY=NONE ESCAPE=NONE)
                  max_file_size=5368709120 """, con, exit_on_error=True)
                  
   
   #**************************************
   # End Application
   #**************************************    
   snowconvert_helpers.quit_application()
   
except Exception as e:
   print(e)
   
   # Let shell script know that python code failed.
   bPythonExceptionOccurred=True   
   
finally:
   if con is not None:
      con.close()

   # Let shell script know that python code failed.      
   if bPythonExceptionOccurred == True:
      sys.exit(12) 
   else:   
      snowconvert_helpers.quit_application()
